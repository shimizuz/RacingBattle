//==============================================================================
//
// ゲームの衝突判定クラス
// Author : Shimizu Shoji
//
// プレイヤーとフィールドの衝突判定などを行います。
//
//==============================================================================
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// include
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#include "CGameCollision.h"

#include "CBullet.h"
#include "CField.h"
#include "CPlayer.h"
#include "CPlayerManager.h"

//==============================================================================
// class implementation
//==============================================================================
//------------------------------------------------
// 判定に関連するクラスの参照を渡す。
//------------------------------------------------
CGameCollision::CGameCollision(
    CBulletManager& bullet_manager,
    CField& field,
    CPlayerManager& player_manager)
    : bullet_manager_(bullet_manager),
      field_(field),
      player_manager_(player_manager) {
}

//------------------------------------------------
// dtor
//------------------------------------------------
CGameCollision::~CGameCollision() {
}

//------------------------------------------------
// 複数のプレイヤーとフィールドの衝突を行う。
//------------------------------------------------
void CGameCollision::CollidePlayersAndField(void) {
  // 現在のプレイヤーのワールド座標からフィールド座標を求める

  // プレイヤーの速度から移動後のワールド座標を求める

  // 移動後のワールド座標からフィールド座標を求める

  // 現在のフィールド座標から移動後のフィールド座標までの
  // 移動経路上にある全てのフィールド座標と衝突判定を取る
    // if 衝突していなかった場合、何もしないで終了
    // else 衝突していた場合

    // TODO: 反射ベクトルを利用した方が良い
    //       また、ベクトルの角度によって速度を削ること
    //       例えば-1なら垂直に壁に突っ込んでいるので、
    //       反射ベクトルの方向(真後ろ)に対して、かなり速度を減速させて移動させる
    // 衝突した地点ギリギリまで移動させて、停止
}

//------------------------------------------------
// 複数のプレイヤーと複数の弾の衝突を行う。
//------------------------------------------------
void CGameCollision::CollidePlayersAndBullets(void) {
  // プレイヤーの座標を取得
  // 弾の座標を取得

  // 衝突の判定を行う
}

//------------------------------------------------
// 複数の弾とフィールドの衝突を行う。
//------------------------------------------------
void CGameCollision::CollideBulletsAndField(void) {
  // 現在の弾のワールド座標からフィールド座標を求める

  // 弾の速度から移動後のワールド座標を求める

  // 移動後のワールド座標からフィールド座標を求める

  // 現在のフィールド座標から移動後のフィールド座標までの
  // 移動経路上にある全てのフィールド座標と衝突判定を取る
  // if 衝突していなかった場合、何もしないで終了
  // else 衝突していた場合

  // TODO: 反射ベクトルを利用した方が良い
  //       また、ベクトルの角度によって速度を削ること
  //       例えば-1なら垂直に壁に突っ込んでいるので、
  //       反射ベクトルの方向(真後ろ)に対して、かなり速度を減速させて移動させる
  // 衝突した地点ギリギリまで移動させて、停止
}
